source_file ::= { top_decl } ;

(* decls *)

top_decl ::= func_decl ;

(* TODO: function arguments *)
func_decl ::= "func" ID "(" ")" expr block ;
var_decl  ::= "var" ID [ ":" expr ] "=" expr ";" ;

(* stmts *)

block ::= "{" { stmt } "}" ;
stmt  ::= expr_stmt
        | return_stmt
        | while_stmt
        | assign
        ;

expr_stmt   ::= expr ";" ;
return_stmt ::= "return" expr ";" ;
while_stmt  ::= "while" expr block ;
assign      ::= expr ("=" | "+=" | "-=" | "*=" | "/=") expr ";" ;

(* exprs *)

expr ::= additive ;

additive ::= multiplicative { ("+" | "-") additive } ;

multiplicative ::= primary { ("*" | "/") multiplicative } ;

primary ::= ID
          | INT
          ;

(* terminals *)

ID  ::= [a-zA-Z_][a-zA-Z_0-9]+ ;
INT ::= [0-9][0-9_]+ ;
